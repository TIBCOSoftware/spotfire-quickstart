#
# This plugin is part of the azure.azcollection collection (version 1.4.0).
# To install it use: ansible-galaxy collection install azure.azcollection
#
# https://docs.ansible.com/ansible/latest/collections/azure/azcollection/azure_rm_inventory.html
#

plugin: azure.azcollection.azure_rm

# fetches VMs from an explicit list of resource groups instead of default all (- '*')
include_vm_resource_groups:
  - sandbox-spotfire-rg
# - '*'

# fetches VMs from VMSSs in all resource groups (defaults to no VMSS fetch)
#include_vmss_resource_groups:
# - '*'

# forces this plugin to use a CLI auth session instead of the automatic auth source selection (eg, prevents the
# presence of 'ANSIBLE_AZURE_RM_X' environment variables from overriding CLI auth)
auth_source: auto
#auth_source: cli

# places a host in the named group if the associated condition evaluates to true
conditional_groups:
  jumphost_servers: "'jumphost' in name"
  tss_servers: "'tss' in name"
  wp_servers: "'wp' in name"

# adds variables to each host found by this inventory plugin, whose values are the result of the associated expression
hostvar_expressions:
  my_host_var:
  # A statically-valued expression has to be both single and double-quoted, or use escaped quotes, since the outer
  # layer of quotes will be consumed by YAML. Without the second set of quotes, it interprets 'staticvalue' as a
  # variable instead of a string literal.
  some_statically_valued_var: "'staticvalue'"
  # overrides the default ansible_host value with a custom Jinja2 expression, in this case, the first DNS hostname, or
  # if none are found, the first public IP address.
  ansible_host: public_ipv4_addresses|default(private_ipv4_addresses, true) | first

# change how inventory_hostname is generated. Each item is a jinja2 expression similar to hostvar_expressions.
#hostnames:
#  - tags.vm_name
#  - default  # special var that uses the default hashed name

# places hosts in dynamically-created groups based on a variable value.
#keyed_groups:
#  - prefix: tag
#    key: tags
