---
#----------------------------------------
# Spotfire node manager (Linux) rpm package install
# https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/installing_a_node_manager_(rpm_linux).html
#----------------------------------------

- ansible.builtin.include_tasks: linux-check-tsnm-service-exists.yml

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
- name: Copy Spotfire node manager linux package (tsnm-{{ tss_version }}.x86_64.rpm)
  ansible.builtin.copy:
    src: "{{ spotfire_local_sw_repo }}/tsnm-{{ tss_version }}.x86_64.rpm"
    dest: "{{ spotfire_remote_sw_repo }}"
#    dest: "/tmp"
#    owner: spotfire
#    group: spotfire
#    mode: '0644'
#  become: true
  tags: tsnm_install
  when: tsnm_service_exists is false

# ---- ONLY for RedHat family ----
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_module.html
- name: Linux | RedHat | Install Spotfire node manager (tsnm) package
  ansible.builtin.yum:
    name: "{{ spotfire_remote_sw_repo }}/tsnm-{{ tss_version }}.x86_64.rpm"
    state: present
  tags: tsnm_install
  when: tsnm_service_exists is false and ansible_distribution_file_variety == "RedHat"

# ---- ONLY for SUSE family ----
# https://docs.ansible.com/ansible/latest/collections/community/general/zypper_module.html
- name: Linux | SUSE | Install Spotfire node manager (tsnm) package
  community.general.zypper:
    name: "{{ spotfire_remote_sw_repo }}/tsnm-{{ tss_version }}.x86_64.rpm"
    state: present
    disable_gpg_check: true
  tags: tsnm_install
  when: tsnm_service_exists is false and ansible_distribution_file_variety == "SUSE"

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
- name: Run Spotfire node manager configure script
#  ansible.builtin.command: configure -m <NODEMANAGER_REGISTRATION_PORT> -c <NODEMANAGER_COMMUNICATION_PORT> -s <SERVER_NAME> -r <SERVER_BACKEND_REGISTRATION_PORT> -b <SERVER_BACKEND_COMMUNICATION_PORT> -n <NODEMANAGER_HOST_NAMES>
#  ansible.builtin.command: configure -m 9080 -c 9443 -s $TSS_HOSTNAME -r 9080 -b 9443 -n $NM_HOSTNAME
  ansible.builtin.command: /opt/tibco/tsnm/{{ tss_version }}/configure -s {{ tss_hostname }} -n {{ ansible_hostname }}
#  become: true
#  become_user: spotfire
  when: tsnm_service_exists is false
